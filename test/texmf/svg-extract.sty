%%
%% This is file `svg.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% svg.dtx  (with options: `svg')
%% 
%% svg-extract -- standalone graphic files from SVG pictures in pdfLaTeX
%% 
%% Copyright (C) Philip Ilten <philten@cern.ch>,  2012-2016
%% Copyright (C) Falk Hanisch <tudscr@gmail.com>, 2016-2017
%% 
%% This file was generated from file svg.dtx.
%% ----------------------------------------------------------------------------
%% 
%% This work may be distributed and/or modified under the conditions
%% of the LaTeX Project Public License, version 1.3c of the license.
%% The latest version of this license is in
%%     http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of
%% LaTeX 2005/12/01 or later and of this work.
%% 
%% This work has the LPPL maintenance status "author-maintained".
%% 
%% The current maintainer and author of this work is Falk Hanisch.
%% 
%% This work consists of the main source file svg.dtx
%% and the derived files
%%     README
%%     svg.dtx (with derived files svg.sty, svg.pdf, Fig.1a.pdf, Fig.1b.eps,
%%     Fig.2.pdf, Fig.2.png),
%%     preamble.tex, example.svg (with derived files example.pdf and
%%     example.pdf_tex),
%%     root.C (with derived files root.svg, root.pdf, and root.pdf_tex).
%% 
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{svg-extract}[%
  2016/00/00 v2.00 svg-extract\space%
  (standalone graphic files from SVG pictures)%
]

\RequirePackage{svg-new}[2016/00/00]
\RequirePackage{etoolbox}


\DefineFamily{newSVG}
\DefineFamilyMember{newSVG}
\newcommand*\svgx@mode{0}
\DefineFamilyKey{newSVG}{extract}[true]{%
  \FamilySetNumerical{newSVG}{extract}{svg@tempa}{%
    {false}{0},{off}{0},{no}{0},%
    {true}{1},{on}{1},{yes}{1},{onlynewer}{1},{newer}{1},%
    {overwrite}{1},{force}{1},{forced}{1},%
    {pdf}{2},{eps}{3},{ps}{4}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa% false
      \let\svgx@mode\svg@tempa%
    \or% true
      \let\svgx@mode\svg@tempa%
    \or% pdf
      \FamilyOptions{newSVG}{extractformat=pdf}%
    \or% eps
      \FamilyOptions{newSVG}{extractformat=eps}%
    \or% ps
      \FamilyOptions{newSVG}{extractformat=ps}%
    \fi%
  \fi%
}
\DeclareOption{on}{\FamilyOptions{newSVG}{extract=true}}
\DeclareOption{off}{\FamilyOptions{newSVG}{extract=false}}

\newcommand*\svgx@format{pdf}
\ifluatex\else\ifpdf\else\ifxetex\else
  \renewcommand*\svgx@format{eps}
\fi\fi\fi
% TODO: Argument prüfen!
\DefineFamilyKey{newSVG}{extractformat}{%
  \def\svgx@format{#1}%
  \FamilyKeyStateProcessed%
}

\newcounter{svgx@runs}
\DefineFamilyKey{newSVG}{extractruns}{%
  \FamilySetCounter{newSVG}{extractruns}{svgx@runs}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifnum\value{svgx@runs}<\@ne\relax%
      \PackageWarning{svg-extract}{%
        The count for runs has to be at least one%
      }%
      \FamilySetCounter{newSVG}{extractruns}{svgx@runs}{\@ne}%
    \fi%
  \fi%
}
\ifluatex
  \newcommand*\svgx@exe@latex{lualatex}
\else\ifpdf
  \newcommand*\svgx@exe@latex{pdflatex}
\else\ifxetex
  \newcommand*\svgx@exe@latex{xelatex}
\else
  \newcommand*\svgx@exe@latex{latex}
\fi\fi\fi
\newcommand*\svgx@opt@latex{}
\DefineFamilyKey{newSVG}{latexopt}{%
  \def\svgx@opt@latex{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@ext@latex{tex}
\DefineFamilyKey{newSVG}{latexext}{%
  \def\svgx@ext@latex{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@exe@dvips{dvips}
\newcommand*\svgx@opt@dvips{}
\DefineFamilyKey{newSVG}{dvipsopt}{%
  \def\svgx@opt@dvips{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@exe@pstoeps{ps2eps}
\newcommand*\svgx@opt@pstoeps{-B -C}
\DefineFamilyKey{newSVG}{pstoepsopt}{%
  \def\svgx@opt@pstoeps{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@exe@pstopdf{ps2pdf}
\newcommand*\svgx@opt@pstopdf{}
\DefineFamilyKey{newSVG}{pstopdfopt}{%
  \def\svgx@opt@pstopdf{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@exe@pdftops{pdftops}
\newcommand*\svgx@opt@pdftops{}
\DefineFamilyKey{newSVG}{pdftopsopt}{%
  \def\svgx@opt@pdftops{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@exe@pdftoeps{pdftops -eps}
\newcommand*\svgx@opt@pdftoeps{}
\DefineFamilyKey{newSVG}{pdftoepsopt}{%
  \def\svgx@opt@pdftoeps{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@clean{}
\DefineFamilyKey{newSVG}{clean}{%
  \FamilySetBool{newSVG}{clean}{@tempswa}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@tempswa%
      \def\svgx@clean{log,aux,dvi,ps,eps,pdf,\svgx@ext@latex}%
    \else%
      \def\svgx@clean{}%
    \fi%
  \else%
    % TODO: Argument prüfen?!
    \def\svgx@clean{#1}%
    \FamilyKeyStateProcessed%
  \fi%
}


% TODO: convert (s. standalone)
% inkscapeexe
% inkscapeformat
% inkscapeopt
% inkscapedpi (density)
% \inkscapecommand

%\newcommand*\svg@inkscape@cmd[2]{%
%  \svg@inkscape@exe\space-z\space\svg@inkscape@area\space%
%  \ifx\svg@inkscape@dpi\relax\else--export-dpi=\svg@inkscape@dpi\space\fi%
%  \if@svg@inkscape@latex--export-latex\space\fi%
%  \ifx\svg@inkscape@opt\@empty\else\svg@inkscape@opt\space\fi%
%  --file="#1.svg"\space%
%  --export-\svg@inkscape@type="#2.\svg@inkscape@type"\space%
%}

% convert=true/false/magick/gs
% convertformat=<Liste>
% convertdpi(density)
%
% convertsize?

% inkscapeexe
% inkscapeopt
% \inkscapecommand

% defgsdevice (convertformat)
% pdf2svg?, imagemagick, ghostscript, size, gsdevice convertexe, gsexe


%pdf2svg?

\newcommand*\svgx@convert@in[1]{}
\let\svgx@convert@in\svgx@format
\newcommand*\svgx@convert@get@input[1]{%
  \begingroup%
    \def\svg@tempa##1,##2\@nil{%
      \def\svg@tempa{##1}%
    }%
    \svg@tempa#1,\@nil%
    \edef\svg@tempa{%
      \noexpand\endgroup%
      \noexpand\def\noexpand\svgx@convert@in{\svg@tempa}%
    }%
  \svg@tempa%
  \ifx\svgx@convert@in\@empty%
    \scr@ifdvioutput{%
      \def\svgx@convert@in{ps}%
    }{%
      \def\svgx@convert@in{pdf}%
    }%
  \fi%
}

\newcommand*\svgx@convert@dpi{300}
\DefineFamilyKey{newSVG}{convertdpi}{%
  \FamilyKeyStateUnknownValue%
  \def\svg@tempb##1x##2x##3\@nil{%
    \ifstr{##3}{x}{%
      \ifnumber{##1}{%
        \ifnumber{##2}{%
          \edef\svgx@convert@dpi{##1x##2}%
          \FamilyKeyStateProcessed%
        }{}%
      }{}%
    }{}%
  }%
  \def\svg@tempa##1dpi##2x##3dpi##4\@nil{%
    \edef\svgx@convert@dpi{##1}%
    \ifnumber{##1}{%
      \IfArgIsEmpty{##3}{%
        \FamilyKeyStateProcessed%
      }{%
        \ifnumber{##3}{\edef\svgx@convert@dpi{##1x##3}}{}%
      }%
    }{}%
    \ifx\FamilyKeyState\FamilyKeyStateProcessed\else%
      \expandafter\svg@tempb\svgx@convert@dpi xx\@nil%
    \fi%
  }%
  \svg@tempa#1dpi#1xdpi\@nil%
}
\DefineFamilyKey{newSVG}{convertdensity}{%
  \FamilyOptions{newSVG}{convertdpi=#1}%
}

\newcommand*\svgx@magick@exe{magick}
\DefineFamilyKey{newSVG}{magickexe}{%
  \def\svgx@magick@exe{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@magick@opt{}
\DefineFamilyKey{newSVG}{magickopt}{%
  \def\svgx@magick@opt{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@magick@cmd[3]{%
  \svgx@magick@exe\space%
  \ifx\svgx@convert@dpi\@empty\else-density\space\svgx@convert@dpi\space\fi%
  \ifx\svgx@magick@opt\@empty\else\svgx@magick@opt\space\fi%
  "#1.#2"\space"#1.#3"%
%%%  --export-\svg@inkscape@type="#2.\svg@inkscape@type"\space%
}


\def\sa@imagemagick@command{%
  \convertexe\space
  -density \density\space 
  \infile\space 
  \ifx\size\empty\else -resize \size\fi\space
  -quality 90 \outfile
}%
\def\sa@ghostscript@command{%
  \gsexe\space -dSAFER -dBATCH -dNOPAUSE 
  -sDEVICE=\gsdevice\space
  -r\density\space 
  -sOutputFile=\outfile\space
  \infile
}%

% GS
% gswin64c -q -dNOCACHE -dNOPAUSE -dBATCH -dSAFER -sDEVICE=eps2write 
% -sOutputFile=newimage-svg-extract.eps newimage-svg-extract.pdf

\newcommand*\svgx@out@path{}
\newcommand*\svgx@out@name{\svg@out@name-extract}
\newcommand*\svgx@out@base{\svgx@out@path\svgx@out@name}
\DefineFamilyKey{newSVG}{extractpath}{%
  \FamilySetNumerical{newSVG}{extractpath}{svg@tempa}{%
    {svgpath}{0},{svgdir}{0},%
    {svgsubpath}{1},{svgsubdir}{1},%
    {basepath}{2},{basedir}{2},{jobpath}{2},{jobdir}{2},%
    {basesubpath}{3},{basesubdir}{3},{jobsubpath}{3},{jobsubdir}{3}
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% svgpath
      \def\svgx@out@path{\svg@file@path}%
    \or% svgsubpath
      \def\svgx@out@path{\svg@file@path svg-extract/}%
    \or% basepath
      \def\svgx@out@path{./}%
    \or% basesubpath
      \def\svgx@out@path{./svg-extract/}%
    \fi%
  \else%
    \def\svgx@out@path{#1}%
    \svg@normalize@path{\svgx@out@path}%
    \FamilyKeyStateProcessed%
  \fi%
}
\DefineFamilyKey{newSVG}{path}{%
  \svg@deprecated@key{path=#1}{extractpath=#1}%
}

\newcommand*\svgx@preamble{\jobname.\svgx@ext@latex}%
\DefineFamilyKey{newSVG}{extractpreamble}{%
  \def\svgx@preamble{#1}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{newSVG}{preamble}{%
  \svg@deprecated@key{preamble=#1}{extractpreamble=#1}%
}

\newcommand*\svgx@endpreamble{}
\expandafter\def\expandafter\svgx@endpreamble\expandafter{%
  \csname begin\endcsname{document}%
}
\DefineFamilyKey{newSVG}{extractpreambleend}{%
  \def\svgx@endpreamble{#1}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{newSVG}{end}{%
  \svg@deprecated@key{end=#1}{extractpreambleend=#1}%
}
\let\svghidepreamblestart\relax
\let\svghidepreambleend\relax

% TODO: Dummy-Optionen in svg-new?
\FamilyExecuteOptions{newSVG}{extract=true,extractruns=2,extractpath=basesubdir}
\FamilyProcessOptions{newSVG}



% DOC aktuelle figure nummerierung (fast) unmöglich, da unterschiedliche Pakete
\DefineFamilyKey{newSVG}{extractname}{%
  \def\svgx@out@name{#1\svg@file@ext-extract}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{newSVG}{name}{%
  \svg@deprecated@key{name=#1}{extractname=#1}%
}

\newif\if@svgx@beamer
\@ifclassloaded{beamer}{\@svgx@beamertrue}{}%
\newbox\svgx@box
\newcommand*\svgxinput[2][]{%
  \sbox\svgx@box{\svg@input[#1]{#2}}%
}
\newcommand*\svgxsetpapersize{%
  \setlength\paperwidth{\the\wd\svgx@box}%
  \ifx\stockwidth\@undefined\else%
    \setlength\stockwidth{\paperwidth}%
  \fi%
  \ifx\mediawidth\@undefined\else%
    \setlength\mediawidth{\paperwidth}%
  \fi%
  \setlength\textwidth{\paperwidth}%
  \setlength\paperheight{\the\dimexpr\ht\svgx@box+\dp\svgx@box\relax}%
  \ifx\stockheight\@undefined\else%
    \setlength\stockheight{\paperheight}%
  \fi%
  \ifx\mediaheight\@undefined\else%
    \setlength\mediaheight{\paperheight}%
  \fi%
  \setlength\textheight{\paperheight}%
  \hoffset=-1in%
  \oddsidemargin=\z@%
  \evensidemargin=\z@%
  \voffset=-1in%
  \topmargin=\z@%
  \headheight=\z@%
  \headsep=\z@%
  \topskip=\z@%
  \footskip=\z@%
  \marginparsep=\z@%
  \marginparwidth=\z@%
  \marginparpush=\z@%
}
\@onlypreamble\svgxsetpapersize
\newcommand*\svgxoutput{%
  \begingroup%
    \setlength\parindent{\z@}%
    \setlength\parskip{\z@}%
    \setlength\parfillskip{\z@}%
    \if@svgx@beamer%
      \setbeamertemplate{navigation symbols}{}%
      \begin{frame}[plain]%
      \usebox\svgx@box%
      \end{frame}%
    \else%
      \pagestyle{empty}%
      \usebox\svgx@box%
    \fi%
    \endgraf%
  \endgroup%
}

\newcommand*\svgx@ifinlist[2]{%
  \begingroup%
    \def\svg@tempa##1,#1,##2\@nil{%
      \IfArgIsEmpty{##2}{%
        \aftergroup\@secondoftwo%
      }{%
        \aftergroup\@firstoftwo%
      }%
    }%
    \expandafter\svg@tempa\expandafter,#2,#1,\@nil
  \endgroup%
}
\newif\if@svgx@run
\ifnum\pdf@shellescape=\@ne\relax\else%
  \renewcommand*\svg@extract[1]{%
    \ifnum\svgx@mode>\z@\relax%
      \begingroup%
        \edef\svg@tempa{#1}%
        \svg@quotes@remove{\svg@tempa}%
        \PackageWarning{svg-extract}{%
          You didn't enable `shell escape' (or `write18')\MessageBreak%
          so it wasn't possible to launch the extraction for\MessageBreak%
          file `\svg@tempa'%
        }%
      \endgroup
    \fi%
  }%
  \expandafter\endinput%
\fi

\newif\if@svgx@write@do{}
\newwrite\svgx@write@out%
\newread\svgx@read@in%
\newcommand*\svgx@read@line{}%
\renewcommand*\svg@extract[1]{%
  \ifnum\svgx@mode>\z@\relax%
    \begingroup%
      \endlinechar=\m@ne%
      \def\svgx@read@line{}%
      \immediate\openout\svgx@write@out=\svgx@out@name.\svgx@ext@latex%
      \IfFileExists{\svgx@preamble}{%
        \immediate\openin\svgx@read@in=\svgx@preamble%
        \@tempswatrue%
        \@svgx@write@dotrue%
        \@whilesw\if@tempswa\fi{%
          \immediate\read\svgx@read@in to\svgx@read@line%
          \ifx\svgx@read@line\@empty%
            \ifeof\svgx@read@in\@tempswafalse\fi%
          \else%
            \svgx@write@till{\svghidepreamblestart}{}%
            \svgx@write@from{\svghidepreambleend}{}%
            \svgx@write@till{\svgx@endpreamble}{\@tempswafalse}%
            \if@svgx@write@do%
              \if@svgx@classfound\else%
                \expandafter\svgx@documentclass%
                  \svgx@read@line\documentclass\documentclass\@nil%
              \fi%
              \ifx\svgx@read@line\@empty\else%
                \immediate\write\svgx@write@out{%
                  \unexpanded\expandafter{\svgx@read@line}%
                }%
              \fi%
            \fi%
          \fi%
        }%
        \immediate\closein\svgx@read@in%
      }{%
        \svg@quotes@remove{\svgx@preamble}%
        \ifx\svgx@preamble\@empty\else%
          \PackageWarning{svg-extract}{%
            The preamble file `\svgx@preamble'\MessageBreak%
            does not exist%
          }%
        \fi%
      }%
      \immediate\closeout\svgx@write@out%
      \immediate\openin\svgx@read@in=\svgx@out@name.\svgx@ext@latex
      \def\svg@tempa{}%
      \loop\unless\ifeof\svgx@read@in%
        \readline\svgx@read@in to\svgx@read@line%
        \ifx\svgx@read@line\@empty\else%
          \edef\svg@tempa{%
            \unexpanded\expandafter{\svg@tempa}%
            \unexpanded\expandafter{\svgx@read@line}^^J%
          }%
        \fi%
      \repeat%
      \immediate\closein\svgx@read@in%
      \immediate\openout\svgx@write@out=\svgx@out@name.\svgx@ext@latex
      \immediate\write\svgx@write@out{%
        \string\AtBeginDocument{\string\svgxsetpapersize}\@percentchar^^J%
      }%
      \if@svgx@classfound\else%
        \immediate\write\svgx@write@out{\noexpand\documentclass{article}}%
      \fi%
      \immediate\write\svgx@write@out{\unexpanded\expandafter{\svg@tempa}}%
      \immediate\write\svgx@write@out{\string\usepackage{svg-extract}}%
      \def\svg@tempa##1{%
        \immediate\write\svgx@write@out{\string\svgsetup{##1}}%
      }%
      \if@svg@inkscape@latex\else%
        \svg@tempa{inkscapelatex=false}%
      \fi%
      \ifdim\svg@param@width>\z@\relax%
        \svg@tempa{width=\svg@param@width}%
      \fi%
      \ifdim\svg@param@height>\z@\relax%
        \svg@tempa{height=\svg@param@height}%
      \fi%
      \ifdim\dimexpr\svg@param@scale\p@\relax=\p@\relax\else%
        \svg@tempa{scale=\svg@param@scale}%
      \fi%
      \ifx\svg@param@pretex\@empty\else%
        \svg@tempa{pretex=\unexpanded\expandafter{\svg@param@pretex}}%
      \fi%
      \ifx\svg@param@apptex\@empty\else%
        \svg@tempa{apptex=\unexpanded\expandafter{\svg@param@apptex}}%
      \fi%
      \ifnum\value{svg@param@lastpage}>\z@\relax%
        \immediate\write\svgx@write@out{%
          \string\svgxinput[lastpage=\the\value{svg@param@lastpage}]{#1}%
        }%
      \else%
        \immediate\write\svgx@write@out{\string\svgxinput{#1}}%
      \fi%
      \immediate\write\svgx@write@out{%
        \string\svgxsetpapersize^^J%
        \string\usepackage{xr}^^J%
        \string\externaldocument{\jobname}^^J%
        \string\begin{document}^^J%
        \string\svgxoutput\@percentchar^^J%
        \string\end{document}%
      }%
      \immediate\closeout\svgx@write@out%
      \svg@quotes@remove{\svgx@out@path}%
      \svg@quotes@remove{\svgx@out@name}%
      \loop\ifnum\value{svgx@runs}>\z@\relax%
        \ShellEscape{%
          \svgx@exe@latex\space\svgx@opt@latex%
          \space"\svgx@out@name.\svgx@ext@latex"%
        }%
        \advance\c@svgx@runs\m@ne%
      \repeat%
      \def\svg@tempa##1##2##3{%
        \edef\svg@tempb{%
          \@nameuse{svgx@exe@##1}\space\@nameuse{svgx@opt@##1}\space%
          "\svgx@out@name.##2"%
        }%
        \ShellEscape{\svg@tempb}%
      }%
      \scr@ifdvioutput{%
        \svg@tempa{dvips}{dvi}{ps}%
        \svgx@ifinlist{eps}{\svgx@format}{\svg@tempa{pstoeps}{ps}{eps}}{}%
        \svgx@ifinlist{pdf}{\svgx@format}{\svg@tempa{pstopdf}{ps}{pdf}}{}%
      }{%
        \svgx@ifinlist{ps}{\svgx@format}{\svg@tempa{pdftops}{pdf}{ps}}{}%
        \svgx@ifinlist{eps}{\svgx@format}{\svg@tempa{pdftoeps}{pdf}{eps}}{}%
      }%
      % TODO: convert!
      \typeout{***************************************************}
      \expandafter\svgx@convert@get@input\expandafter{\svgx@format}%
      \ShellEscape{\svgx@magick@cmd{\svgx@out@name}{\svgx@convert@in}{png}}%
      % TODO: Ausgabeformate (extract+convert) abrbeiten und verschieben!
      \edef\svg@tempb{\svgx@format}% TODO: convertformat
      % TODO: Verzeichnis nur erstellen, wenn mindestens eine Datei?!
      \svg@shell@mkdir{\svgx@out@path}%
      \@for\svg@tempa:=\svg@tempb\do{%
        \ifx\svg@tempa\@empty\else%
%          \svgx@move{\svgx@out@name}{\svg@tempa}%
        \fi%
      }%
      % TODO: Aufräumen vom Rest!
%      \@for\svg@tempa:=\svgx@clean\do{%
%        \expandafter\svgx@ifinlist\expandafter{\svg@tempa}{\svgx@format}{}{%
%          \ShellEscape{%
%            \svgx@rm\space"\svgx@out@name.\svg@tempa"%
%          }%
%        }%
%      }%
    \endgroup%
  \fi%
}
\newcommand*\svgx@move[2]{%
  \begingroup%
    \IfFileExists{"#1.#2"}{%
      \ShellEscape{%
        \svg@shell@move\space"#1.#2"\space"\svgx@out@base.#2"%
      }%
    }{%
      \edef\svg@tempa{#2}
      \expandafter\svgx@ifinlist\expandafter{\svg@tempa}{pdf,ps,eps}{%
        \def\svg@tempb{%
          The graphic file extraction failed\MessageBreak%
          for `#1.#2'\MessageBreak
          Troubleshooting: Please check in the log file how\MessageBreak%
          the invocation of the extraction took place and\MessageBreak%
          try to execute it yourself in the terminal%
        }%
      }{%
        \def\svg@tempb{%
          The extraction to format `#2' failed\MessageBreak%
          for `#1.#2'\MessageBreak
          Supported file types are `pdf,ps,eps'%
        }%
      }%
      \PackageWarning{svg-extract}{\svg@tempb}%
    }%
  \endgroup%
}
\newif\if@svgx@classfound
\newcommand*\svgx@documentclass{}
\def\svgx@documentclass#1\documentclass#2\documentclass#3\@nil{%
  \IfArgIsEmpty{#2}{}{\@svgx@classfoundtrue}%
}
\newcommand*\svgx@write@skip{}
\def\svgx@write@skip#1\@nil#2#3{%
  \def\svg@tempa##1{%
    \def\svg@tempa####1##1####2##1####3\@nil{%
      \IfArgIsEmpty{####3}{}{%
        \ifstr{#2}{till}{%
          \IfArgIsEmpty{####1}{}{%
            \immediate\write\svgx@write@out{####1}%
          }%
          \@svgx@write@dofalse%
        }{%
          \ifstr{#2}{from}{%
            \IfArgIsEmpty{####2}{%
              \def\svgx@read@line{}%
            }{%
              \def\svgx@read@line{####2}%
            }%
            \@svgx@write@dotrue%
          }{}%
        }%
        #3%
      }%
    }%
  }%
  \edef\svg@tempb{\expandafter\detokenize\expandafter{#1}}%
  \expandafter\svg@tempa\expandafter{\svg@tempb}%
  \edef\svg@tempb{%
    \expandafter\detokenize\expandafter{\svgx@read@line}\svg@tempb\svg@tempb%
  }%
  \expandafter\svg@tempa\svg@tempb\@nil%
}
\newcommand*\svgx@write@till[2]{%
  \svgx@write@skip#1\@nil{till}{#2}%
}
\newcommand*\svgx@write@from[2]{%
  \svgx@write@skip#1\@nil{from}{#2}%
}

\endinput
